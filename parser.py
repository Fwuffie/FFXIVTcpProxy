from struct import *
import time
from datetime import datetime
from time import sleep
serverDict = {55007: 'Brynhildr'}

def getPacketType(packet):
	typeDict = {
		3: 'IPC',
		7: 'ClientKeepAlive',
		8: 'ServerKeepAlive'
	}
	type = unpack('<I', packet[52:56])[0]
	return typeDict[type]

def isCompressed(packet):
	return packet[33]

def getPacketEpoch(packet):
	epoch = unpack('<Q', packet[16:24])[0]/1000
	return datetime.fromtimestamp(epoch).strftime('%H:%M:%S.%f')

def getMessageCount(packet):
	return unpack('<H', packet[30:32])[0]

def getMessages(packet):
	pos = 40
	messages = []
	for i in range(getMessageCount(packet)):
		size = unpack('<I', packet[pos:pos+4])[0]
		messages.append(packet[pos:pos+size])
		pos = pos+size
	return messages

def parseTarget(hex):
	if hex in targetDict:
		return targetDict[hex]
	else:
		return hex.hex()

def parseAction(actionhex, data):
	if actionhex in actionDict:
		action = actionDict[actionhex]
		if action[1] == None:
			data = data.hex()
		else:
			data = action[1](data)
		return (action[0], data, action[2])
	else:
		return (actionhex.hex(), data.hex(), True)



def parseIndoorMovementData(data):
	rot1 = unpack('<f', data[0:4])[0]
	rot2 = unpack('<f', data[4:8])[0]
	x1 = unpack('<f', data[12:16])[0]
	x2 = unpack('<f', data[16:20])[0]
	y2 = unpack('<f', data[20:24])[0]
	y1 = unpack('<f', data[24:28])[0]
	z1 = unpack('<f', data[28:32])[0]
	z2 = unpack('<f', data[32:36])[0]
	return "rot={:.2f}/{:.2f} x={:.2f}/{:.2f}, y={:.2f}/{:.2f}, z={:.2f}/{:.2f}".format(rot1,rot2,x1,y1,z1,x2,y2,z2)

def parseOutdoorMovementData(data):
	rot = unpack('<f', data[0:4])[0]
	x = unpack('<f', data[8:12])[0]
	y = unpack('<f', data[12:16])[0]
	z = unpack('<f', data[16:20])[0]
	return "rot={:.2f} x={:.2f}, y={:.2f}, z={:.2f}".format(rot,x,y,z)

def parseOpenDialog(data):
	id = unpack('<I', data[0:4])
	return "id={} | {}".format(id, data.hex())

def parseChatFC(data):
	text = data[8:]
	return text.decode().rstrip('\x00')

def parseEmote(data):
	emoteID = unpack('<I', data[4:8])[0]
	return emoteID


targetDict = {
	#b'\x1e\x56\x6d\x10': 'laura'
}

actionDict = {
	b'\xa3\x01': ('indoormovement', parseIndoorMovementData, False),
	b'\x12\x02': ('outdoormovement', parseOutdoorMovementData, False),
	b'\x8b\x00': ('Emote', parseEmote, False),
	b'\x2d\x01': ('openDialog', parseOpenDialog, True),
	b'\x33\x03': ('closeDialog', None, True),
	b'\xa3\x03': ('IdleUpdate?', None, False),
	b'\x65\x00': ('chatFC', parseChatFC, True),
	b'\xf4\x02': ('chatSay', None, True),
	b'\x4a\x01': ('InvManagement', None, True),

	b'\x14\x03': ('IdleUpdateRequest?', None, False),
	b'\xcb\x02': ('IdleUpdateAck', None, False),
	b'\x05\x03': ('InvManagementAck', None, True),
	b'\x9b\x03': ('UnknownPlayerData?', None, False),
	b'\x64\x02': ('UnknownPlayerData?', None, False),
	b'\x3d\x02': ('PlayerMovement?', None, False),
	b'\xfc\x00': ('PlayerEmote?', None, False),
	b'\xfc\x02': ('PlayerEmote?', None, False),
	b'\x67\x02': ('Unknown', None, False),
	b'\xfb\x02': ('Unknown', None, False),
	b'\xda\x01': ('PartySearch', None, False),
	b'\xa7\x02': ('PlayerTPReq', None, False),
	b'\x43\x01': ('HouseInfo', None, True),

}




def parse(data, game_port, server_port, origin, game, server):
	#Detect Packets to gameserver
	if server_port == 55007:
		try:
			time = getPacketEpoch(data)

			if isCompressed(data):
				if origin == 'game':
					print("[{}|{}|{}] -> Compressed".format(game_port,serverDict[server_port], time[:-3]))
				#if origin == 'server':
					# print("[{}|{}|{}] <- Compressed".format(game_port,serverDict[server_port], time[:-3]))
				return

			#Clear Keepalive Packets
			if getPacketType(data) != 'IPC':
				return

			messages = getMessages(data)
			for message in messages:
				source = parseTarget(message[4:8])
				target = parseTarget(message[8:12])
				action, data, show = parseAction(message[18:20], message[32:])
				if show:
					if origin == 'game':
						print("[{}|{}|{}] -> {}({}>>{}) {}".format(game_port,serverDict[server_port], time[:-3], action, source, target, data))
					if origin == 'server':
						print("[{}|{}|{}] <- {}({}>>{}) {}".format(game_port,serverDict[server_port], time[:-3], action, source, target, data))
				# Get Commands From Client
				if (action == 'chatFC' and data[0] == '!'):
					if data[1:7] == "reload":
						print("Reloading Parser")
						return 'reload'
					else:
						return cmd(data[1:], game, server)

				#Get Commands For House Buy
				if action == 'Emote' and data == 42:
					buyHouse(game, server)
					return
		except Exception as e:
			print("Error: {}".format(data.hex()))
			raise
	else:
		return


def sendLala(game, server):
	msg_type = b'\x65\x00'
	msg_src = b'\x1e\x56\x6d\x10'
	msg_tgt = b'\x1e\x56\x6d\x10'
	srv_id = b'\x24\x04'
	magic = bytearray(b'\xaf\x4b\x01\x00\x03\x00\x22\x00')
	text = bytearray('hiya everyone, lalas r da best', 'utf-8')
	while len(text) < 1024:
		text.append(0)
	
	data = magic + text
	packet = encode(msg_type, msg_src, msg_tgt, srv_id, data)
	server.sendall(packet)
	return


def buyHouse(game, server):
	dataOD = b'\x28\x98\x51\x00\x01\x00\x00\x00\x87\x00\x0b\x00\x00\x00\x00\x00'
	dataCD = b'\x87\x00\x0b\x00\x00\x00\x00\x01\x01\x00\x00\x00\x00\x00\x00\x00'

	packetOD = encode(b'\x2d\x01', b'\x1e\x56\x6d\x10',  b'\x1e\x56\x6d\x10', b'\x24\x04', dataOD)
	server.sendall(packetOD)
	sleep(0.01)
	packetCD = encode(b'\x33\x03', b'\x1e\x56\x6d\x10',  b'\x1e\x56\x6d\x10', b'\x24\x04', dataCD)
	server.sendall(packetCD)
	print("Sent House Req")
	return

cmdDict = {
	'lala': sendLala,
	'h': buyHouse
}

def cmd(cmd, game, server):
	print("Executing Cmd: {}".format(cmd) )
	try:
		cmdDict[cmd](game, server)
	except Exception as e:
		print('Command "{}" not found.'.format(cmd))
	return 'pass'

def encode(msg_type, msg_src, msg_tgt, srv_id, data):
	longepoch = pack('<Q', int(1000*time.time()))
	shortepoch = pack('<I', int(time.time()))
	length = pack('<H', len(data) + 72)
	msg_size = pack('<I',  32 + len(data))
	packet = b'\x52\x52\xa0\x41\xff\x5d\x46\xe2\x7f\x2a\x64\x4d\x7b\x99\xc4\x75'
	packet += longepoch
	packet += length
	packet += b'\x00\x00\x00\x00'
	packet += b'\x01\x00'
	packet += b'\x01\x00\x00\x00\x00\x00\x00\x00'
	packet += msg_size
	packet += msg_src
	packet += msg_tgt
	packet += b'\x03\x00\x00\x00\x14\x00'
	packet += msg_type
	packet += b'\x00\x00'
	packet += srv_id
	packet += shortepoch
	packet += b'\x00\x00\x00\x00'
	packet += data
	return packet


# RANDOM Packets					u						Epoch		  len		u	msgc e	c	u			size	src       target  type           Type   u   srvID  epoch	   u		
# [56419, Brynhildr] <- 5252a041ff5d46e27f2a644d7b99c475 0d65056a7b010000 5800 00000000 0100 01 00 000000000000 30000000 10ac7010 1e566d10 0300 0000 1400 3d02 0000 2404 0f492161 00000000 4a6930043c002d2d8c83f127000000005252a041ff5d46e27f2a644d7b99c4751565056a7b0100006800000000000100010000000000000040000000d7db69101e566d10030000001400fc00000024040f492161000000003200d72900000000000000000000000000000000447f0000000000e000000000
# [56419, Brynhildr] <- 5252a041ff5d46e27f2a644d7b99c475 7166056a7b010000 c000 00000000 0300 01 00 000000000000 38000000 d7db6910 1e566d10 0300 0000 1400 6402 0000 2404 0f492161 00000000 0000000000000000010000000100000000000000437f00003000000010ac70101e566d100300000014003d02000024040f492161000000004a6900023c00f92c6583fc27000000003000000010ac70101e566d100300000014003d02000024040f492161000000004a6930013c00f42c6583042800000000
# [56419, Brynhildr] <- 5252a041ff5d46e27f2a644d7b99c475 a967056a7b010000 5800 00000000 0100 01 00 000000000000 30000000 10ac7010 1e566d10 0300 0000 1400 3d02 0000 2404 10492161 00000000 4a6900023c00db2c32832b2800000000
# [56419, Brynhildr] <- 5252a041ff5d46e27f2a644d7b99c475 6368056a7b010000 5000 00000000 0100 01 00 000000000000 28000000 10ac7010 1e566d10 0300 0000 1400 9b03 0000 2404 10492161 00000000 06ed01001027d511
# [56419, Brynhildr] <- 5252a041ff5d46e27f2a644d7b99c475 0c69056a7b010000 5800 00000000 0100 01 00 000000000000 30000000 10ac7010 1e566d10 0300 0000 1400 3d02 0000 2404 10492161 00000000 4a6920013c00c02c3283572800000000
# [56419, Brynhildr] <- 5252a041ff5d46e27f2a644d7b99c475 1569056a7b010000 6800 00000000 0100 01 00 000000000000 40000000 d7db6910 1e566d10 0300 0000 1400 fc00 0000 2404 10492161 00000000 3200b14700000000000000000000000000000000437f00002298510001000000
# [56419, Brynhildr] <- 5252a041ff5d46e27f2a644d7b99c475 1f6a056a7b010000 8000 00000000 0200 01 00 000000000000 30000000 10ac7010 1e566d10 0300 0000 1400 3d02 0000 2404 10492161 00000000 4a6920003c00b22c42836e2805000000280000


# Movement Packet?						16b					Epoch																																						x		y         z
# [56419, Brynhildr] -> 5252a041ff5d46e27f2a644d7b99c475 0680086a7b010000 7000 00000000 0100 01 00 000000000000 48000000 1e566d10 1e566d10 0300 0000 1400 a301 0000 4e03 da492161 00000000 1c1f3bc0 1c1f3bc0 00000000 59bb02bf 00000000 a157c3bf 764f66bf 00000000 2e2652c0 00000000
# [56419, Brynhildr] -> 5252a041ff5d46e27f2a644d7b99c475 9550096a7b010000 7000 00000000 0100 01 00 000000000000 48000000 1e566d10 1e566d10 0300 0000 1400 a301 0000 4e03 104a2161 00000000 5ac25a3e 5ac25a3e 00404000 0f669fbd 00000000 76b9fe3e 0f669fbd 00000000 76b9fe3e 00000000
# [56419, Brynhildr] -> 5252a041ff5d46e27f2a644d7b99c475 5b562c6a7b010000 7000 00000000 0100 01 00 000000000000 48000000 1e566d10 1e566d10 0300 0000 1400 a301 0000 4e03 07532161 00000000 669918c0 669918c0 00404000 a7d0ffbf 00000000 8a721b3e a7d0ffbf 00000000 8a721b3e 00000000
# [56419, Brynhildr] -> 5252a041ff5d46e27f2a644d7b99c475 8b6e366a7b010000 7000 00000000 0100 01 00 000000000000 48000000 1e566d10 1e566d10 0300 0000 1400 a301 0000 4e03 9d552161 00000000 818ac83f 457ac93f 00404000 c2d715bf 00000000 6abf163e c2d715bf 00000000 6abf163e 00000000 Con1
# [56419, Brynhildr] -> 5252a041ff5d46e27f2a644d7b99c475 956e366a7b010000 7000 00000000 0100 01 00 000000000000 48000000 1e566d10 1e566d10 0300 0000 1400 a301 0000 4e03 9d552161 00000000 457ac93f 457ac93f 00404000 c2d715bf 00000000 6abf163e c2d715bf 00000000 6abf163e 00000000 Con1
#Idle Packet
# [56419, Brynhildr] -> 5252a041ff5d46e27f2a644d7b99c475 2073166a7b010000 6000 00000000 0100 01 00 000000000000 38000000 1e566d10 1e566d10 0300 0000 1400 a303 0000 4e03 6d4d2161 00000000 5b048a55 00000000 00000000 00000000 00000000 00000000
#Error server pac
# [57938, Brynhildr] <- 5252a041ff5d46e27f2a644d7b99c475 74da426e7b010000 ec00 00000000 0800 01 01 000000000000 789c7dcc3b0ac2401006e07f37d9a415b5f00121888fca33a897b094486acfa0bda567f02239808d17f00831ef2e6e64417087191898ff67f82200ef01b6c1fed473f43d842b8050a587d95147ac7c89f52df8fee0372f21e103974d1cb6679d555776dda3ff4cd2b6dd15f76bd27591de8cf197c6cf6cdf237c8ff273c65f183fb77d45f88af20bc69f1bbfb07d97f05dca2f197f6afcd2f61dc27728bf62fc89f12bdb97842f29bf66fcb1f16bdb17842f28bf61fc91f11bdb07e1e3dfff00997099a5
# [57938, Brynhildr] <- 5252a041ff5d46e27f2a644d7b99c475 597f4a6e7b010000 c901 00000000 0700 01 01 000000000000 789c5bc0c4c06029cce02017962bc0ccc0c020c2e0cdc8c0a0c0fa34412991013b7880cc99c921c500d4c0709a430d4ca3838a027e300601462114331e60aa8e2d656038560862c9323230e3b07f14d00930af5074daffffbf83dce46b8e8f19581860b80a1835e20c990c1c0c4c40c8c9a001e40b0359201092919a939997a2e09658925a8cc54c3646c6146e167686c0997318ca6731cc6466666c5e95c292c2a284dd0d0b80c6d652903e0901fe0c7e3006bb8d1b9e821f6037e76f3923c3fffd20961c227db2c3a54548b17914500a5eff9776faf0ffbce3a499ee8718c0a50f24fe18b19644b401a0f45947b7f4896206167310e9537e347d0e3880a54f1d63ef014b9f09403c1f257db2a0a44f651e06064d60d90d5283a4ed01846ab007d6020e10373330080353524fcb8e833ffef33b59cc5e7b0866fe223ce63303cd6f019abf08a7f9c68d2016a8f6e0069acfb4622ad8fcbab52be0e62fc563be18d07c4ba0eea538cdef3b0062b1003107d07cadebcbc1e62f5fb2176efe7a3ce62b41ddbf1ea7f92c6c70f70359f33e3d3ac8c170c07173a63ed87c0032c28373
# [57938, Brynhildr] <- 5252a041ff5d46e27f2a644d7b99c475 f7144c6e7b010000 b101 00000000 0600 01 01 000000000000 789c5bc0c4c0d025cce02017962bc0ccc0c020c2e0cdc8c0a0c0ea9ba894c8801d3c40e644493332b0e15008021505fc600c06dc28663cc0541d5bcac0f0bf1ec462636460c663ec28a0035832d5d9e9c3fff38e1e9589878e3132324c146706c6751fc309062630db9481118e1380628c0c1c0cae650a8e7978cc64616454e360e164e059b198c18189610550a869750a6b8aa81776f50b80e9531f4ffae41482a86364004b82c00352fc785c9d81419609431864c6038757050c20cca0809098c879ac10442b313230b182fc13408a6da3809a203eced069ffffff0e2afd3c4ec4ea793667c5935dbba8e7860420ee43499f2c28e953918781e100306f80d420697b00a11aec19187eef07b1404990858b81a12765f581f7ff8f3bf6f77a1c82993f1f8ff9e240f33581bae7e3349f192c0eca1fc2ec40f35b761cfcf19fdfc962f65ab8f90bf198af0075ff429ce6effb05339f1f683ea3f7d70320f31f886c809bef2c82db7c65a01ec37e39b01aece643ea03306007110e0719180480f1bd036c3e00c73c6d1f
# [57938, Brynhildr] <- 5252a041ff5d46e27f2a644d7b99c475 4193636e7b010000 1201 00000000 0a00 01 01 000000000000 789c7dd0bb0e01411406e0ffcc65575c5756a3115169140a89cee509546a2a141a2f40ad21f144b6f70e941e42d68e8c1073cc2493ccfcf3e7cbc9b40134a6ebc86c999d6b8804d0d493456b9e5d51cff63ec67086d7e3f0d353f4ddab86029d53e3d5c1675d891000bbc13e4eb7efd06487cd3d2144e3d532494c667cf2f891f5c9f535e36bce171ebf627de1fa8af115e74b8f5fb6be747dc9f892f395c72f595fb9be607cc1f9dae317adaf5d9f189f383ff0f805eb07ae0fc607e7dfe2ff7edefaa6f3ed2b49ceff98acdb3f27391c47bdc7e5fcf6538f1f5a3f8d9df94366fef077fe271d608230
#



#														dir		dir2	0
# [Brynhildr|21:32:45.773] -> movement(laura>>laura) 39a8cd3f 39a8cd3f 10405000 19d6763e 2817113f f73f65c0 19d6763e 2817113f f73f65c0 00000000
# [Brynhildr|21:32:45.782] -> movement(laura>>laura) 39a8cd3f 39a8cd3f 10405000 19d6763e 90b1f53e f73f65c0 19d6763e 90b1f53e f73f65c0 00000000
# [Brynhildr|21:32:45.792] -> movement(laura>>laura) 39a8cd3f 39a8cd3f 10405000 19d6763e c087c63e f73f65c0 19d6763e c087c63e f73f65c0 00000000
# [Brynhildr|21:32:45.803] -> movement(laura>>laura) 39a8cd3f 39a8cd3f 10405000 19d6763e b086963e f73f65c0 19d6763e b086963e f73f65c0 00000000
# [Brynhildr|21:32:45.813] -> movement(laura>>laura) 39a8cd3f 39a8cd3f 10405000 19d6763e 409f4a3e f73f65c0 19d6763e 409f4a3e f73f65c0 00000000
# [Brynhildr|21:32:45.823] -> movement(laura>>laura) 39a8cd3f 39a8cd3f 10405000 19d6763e c0e6c93d f73f65c0 19d6763e c0e6c93d f73f65c0 00000000
# [Brynhildr|21:32:45.833] -> movement(laura>>laura) 39a8cd3f 39a8cd3f 00024000 19d6763e 00000000 f73f65c0 19d6763e 00000000 f73f65c0 00000000

							
#Open Sale Placard 		22985100 01000000 87000b00 00400000
#Open Standard Placard 	21985100 01000000 87000b00 00400000
#Close Standard Placard	87000b00 00000001 00000000 00010000
#Close Sale Placard	 	87000b00 00000001 01000000 6d6ba687

#87000b00 00000001 02000000 00000000
#87000b00 00000001 01000000 00000000
#Open Retainer Dialoug		490f 0040 00000000 e0000b00 00000000
#Close Retainer Dialoug		e000 0b00 01000000 64000000 00010000

#Emote
#f4010000 0500 000000000000000000000000000000000000000000e000000000
#f4010000 2900 000000000000000000000000000000000000000000e000000000
#f4010000 2200 000000000000000000000000000000000000000000e000000000


#chat
#af4b